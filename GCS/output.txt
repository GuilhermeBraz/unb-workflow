

WARNING in ./node_modules/pikaday/pikaday.js 28:17-24
Critical dependency: the request of a dependency is an expression
 @ ./app/javascript/legacy/components/date_range_picker.js
 @ ./app/javascript/legacy/nonprofits/payments/index/page.js
 @ ./app/javascript/packs/page__nonprofits__payments__index.js

ERROR in app/javascript/components/common/PageWrapper.tsx 51:2-55:29
TS2322: Type 'Element | null' is not assignable to type 'Element'.
  Type 'null' is not assignable to type 'Element'.
    49 |
    50 | 	/* eslint-disable @typescript-eslint/no-explicit-any */
  > 51 | 	return (pageContext && <HosterContext.Provider value={pageContext.hoster}>
       | 	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 52 | 		<IntlProvider locale={pageContext.i18n.locale} messages={convert(I18n.translations[I18n.locale]) as any}>
       | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 53 | 			{props.children}
       | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 54 | 		</IntlProvider>
       | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 55 | 	</HosterContext.Provider>);
       | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    56 | 	/* eslint-enable @typescript-eslint/no-explicit-any */
    57 | }

ERROR in app/javascript/components/common/progress/AnimatedCheckmark.tsx 137:3-18
TS2322: Type 'string | undefined' is not assignable to type 'string'.
  Type 'undefined' is not assignable to type 'string'.
    135 |
    136 | 	const classes = useStyles({
  > 137 | 		backgroundColor: props.backgroundColor,
        | 		^^^^^^^^^^^^^^^
    138 | 		checkColor: props.checkColor,
    139 | 		checkThickness: props.checkThickness,
    140 | 		animationDuration: props.animationDuration,

ERROR in app/javascript/components/common/progress/AnimatedCheckmark.tsx 138:3-13
TS2322: Type 'string | undefined' is not assignable to type 'string'.
  Type 'undefined' is not assignable to type 'string'.
    136 | 	const classes = useStyles({
    137 | 		backgroundColor: props.backgroundColor,
  > 138 | 		checkColor: props.checkColor,
        | 		^^^^^^^^^^
    139 | 		checkThickness: props.checkThickness,
    140 | 		animationDuration: props.animationDuration,
    141 | 		explosion: props.explosion,

ERROR in app/javascript/components/form_fields/TextField.tsx 12:31-32
TS2344: Type 'T' does not satisfy the constraint 'Record<string, any>'.
  Type 'unknown' is not assignable to type 'Record<string, any>'.
    10 | interface ConversionProps<T extends unknown = unknown> {
    11 | 	disabled?:boolean;
  > 12 | 	field: ControllerRenderProps<T, string>;
       | 	                             ^
    13 | 	fieldState: ControllerFieldState;
    14 | 	formState: FormState<T>;
    15 | 	helperText?:React.ReactNode;

ERROR in app/javascript/components/form_fields/TextField.tsx 81:46-51
TS2322: Type 'ControllerRenderProps<TFieldValues, string | undefined>' is not assignable to type 'ControllerRenderProps<unknown, string>'.
  Type 'string | undefined' is not assignable to type 'string'.
    Type 'undefined' is not assignable to type 'string'.
    79 |
    80 |
  > 81 | 	return <MuiTextField {...fieldToTextField({ field, fieldState, formState,  ...props })} id={id}>
       | 	                                            ^^^^^
    82 | 		{children}
    83 | 	</MuiTextField>;
    84 |

ERROR in app/javascript/components/users/SignInComponent.tsx 112:53-130
TS2769: No overload matches this call.
  Overload 1 of 5, '(reducer: ReducerWithoutAction<any>, initializerArg: any, initializer?: undefined): [any, DispatchWithoutAction]', gave the following error.
    Argument of type '(state: ComponentState, action: Action) => { state: SignInComponentStates; previousState: SignInComponentStates; }' is not assignable to parameter of type 'ReducerWithoutAction<any>'.
  Overload 2 of 5, '(reducer: (state: ComponentState, action: Action) => { state: SignInComponentStates; previousState: SignInComponentStates; }, initialState: { ...; }, initializer?: undefined): [...]', gave the following error.
    Type 'null' is not assignable to type 'SignInComponentStates'.
    110 | function useStateAndEventDispatch({ submitting, isValid, touched, signedIn, ...props }: DispatchInput): SignInComponentStates {
    111 |
  > 112 | 	const [{ state, previousState }, dispatchChange] = useReducer(signInComponentReducer, { state: 'isReady', previousState: null });
        | 	                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    113 |
    114 | 	const signInErrorRef = useValueAsRef(props.lastSignInAttemptError);
    115 | 	const onSubmittingRef = useValueAsRef(props.onSubmitting);

ERROR in app/javascript/components/users/SignInComponent.tsx 128:26-48
TS2345: Argument of type 'NetworkError | null | undefined' is not assignable to parameter of type 'NetworkError'.
  Type 'undefined' is not assignable to type 'NetworkError'.
    126 | 		else if (previousState == 'isSubmitting' && state != 'isSubmitting' && state !== 'isSuccessful') {
    127 | 			if (isMounted())
  > 128 | 				onFailureRef.current(signInErrorRef.current);
        | 				                     ^^^^^^^^^^^^^^^^^^^^^^
    129 | 		}
    130 | 		else if (previousState != 'isSuccessful' && state === 'isSuccessful') {
    131 | 			if (isMounted())

ERROR in app/javascript/components/users/SignInComponent.tsx 135:18-46
TS2554: Expected 0 arguments, but got 1.
    133 | 		}
    134 |
  > 135 | 		dispatchChange({ type: 'PROCESSED_EVENTS' });
        | 		               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    136 | 	}, [state, previousState, onSubmittingRef, signInErrorRef, onSuccessRef, onFailureRef, isMounted]);
    137 |
    138 | 	useEffect(() => {

ERROR in app/javascript/components/users/SignInComponent.tsx 141:20-64
TS2554: Expected 0 arguments, but got 1.
    139 | 		if (submitting) {
    140 | 			if (isMounted())
  > 141 | 				dispatchChange({ type: 'SET_STATE', state: "isSubmitting" });
        | 				               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    142 | 		}
    143 | 	}, [submitting, isMounted]);
    144 |

ERROR in app/javascript/components/users/SignInComponent.tsx 148:20-61
TS2554: Expected 0 arguments, but got 1.
    146 | 		if (isValid && touched && state === 'isReady') {
    147 | 			if (isMounted())
  > 148 | 				dispatchChange({ type: 'SET_STATE', state: 'canSubmit' });
        | 				               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    149 | 		}
    150 | 	}, [isValid, touched, state, isMounted]);
    151 |

ERROR in app/javascript/components/users/SignInComponent.tsx 155:20-64
TS2554: Expected 0 arguments, but got 1.
    153 | 		if (signedIn) {
    154 | 			if (isMounted())
  > 155 | 				dispatchChange({ type: 'SET_STATE', state: 'isSuccessful' });
        | 				               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    156 | 		}
    157 | 	}, [signedIn, isMounted]);
    158 |

ERROR in app/javascript/components/users/SignInComponent.tsx 161:8-17
TS2774: This condition will always return true since the function is always defined. Did you mean to call it instead?
    159 | 	useEffect(() => {
    160 | 		if (!submitting && previousSubmitting && !signedIn) {
  > 161 | 			if (isMounted) {
        | 			    ^^^^^^^^^
    162 | 				dispatchChange({type: 'SET_STATE', state: 'isReady'});
    163 | 			}
    164 | 		}

ERROR in app/javascript/components/users/SignInComponent.tsx 162:20-57
TS2554: Expected 0 arguments, but got 1.
    160 | 		if (!submitting && previousSubmitting && !signedIn) {
    161 | 			if (isMounted) {
  > 162 | 				dispatchChange({type: 'SET_STATE', state: 'isReady'});
        | 				               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    163 | 			}
    164 | 		}
    165 | 	}, [submitting, previousSubmitting, signedIn, isMounted]);

ERROR in app/javascript/components/users/SignInComponent.tsx 247:5-27
TS2322: Type 'NetworkError | undefined' is not assignable to type 'NetworkError'.
  Type 'undefined' is not assignable to type 'NetworkError'.
    245 | 				passwordLabel={passwordLabel}
    246 | 				failed={failed}
  > 247 | 				lastSignInAttemptError={lastSignInAttemptError}
        | 				^^^^^^^^^^^^^^^^^^^^^^
    248 | 				classes={classes}
    249 | 				loginHeaderLabel={loginHeaderLabel}
    250 | 				submitting={submitting}

ERROR in app/javascript/components/users/SignInComponent.tsx 251:5-14
TS2322: Type '((error: NetworkError) => void) | undefined' is not assignable to type '(error: NetworkError) => void'.
  Type 'undefined' is not assignable to type '(error: NetworkError) => void'.
    249 | 				loginHeaderLabel={loginHeaderLabel}
    250 | 				submitting={submitting}
  > 251 | 				onFailure={onFailure}
        | 				^^^^^^^^^
    252 | 				onSubmitting={onSubmitting}
    253 | 				onSuccess={onSuccess}
    254 | 				showProgressAndSuccess={showProgressAndSuccess}

ERROR in app/javascript/components/users/SignInComponent.tsx 252:5-17
TS2322: Type '(() => void) | undefined' is not assignable to type '() => void'.
  Type 'undefined' is not assignable to type '() => void'.
    250 | 				submitting={submitting}
    251 | 				onFailure={onFailure}
  > 252 | 				onSubmitting={onSubmitting}
        | 				^^^^^^^^^^^^
    253 | 				onSuccess={onSuccess}
    254 | 				showProgressAndSuccess={showProgressAndSuccess}
    255 | 				signedIn={signedIn}

ERROR in app/javascript/components/users/SignInComponent.tsx 253:5-14
TS2322: Type '(() => void) | undefined' is not assignable to type '() => void'.
  Type 'undefined' is not assignable to type '() => void'.
    251 | 				onFailure={onFailure}
    252 | 				onSubmitting={onSubmitting}
  > 253 | 				onSuccess={onSuccess}
        | 				^^^^^^^^^
    254 | 				showProgressAndSuccess={showProgressAndSuccess}
    255 | 				signedIn={signedIn}
    256 | 				form={form}

ERROR in app/javascript/components/users/SignInComponent.tsx 254:5-27
TS2322: Type 'boolean | undefined' is not assignable to type 'boolean'.
  Type 'undefined' is not assignable to type 'boolean'.
    252 | 				onSubmitting={onSubmitting}
    253 | 				onSuccess={onSuccess}
  > 254 | 				showProgressAndSuccess={showProgressAndSuccess}
        | 				^^^^^^^^^^^^^^^^^^^^^^
    255 | 				signedIn={signedIn}
    256 | 				form={form}
    257 | 			/>;

ERROR in app/javascript/donate-button/donate-button.v2.ts 51:5-25
TS2531: Object is possibly 'null'.
    49 |     params.command = 'setDonationParams'
    50 |     params.sender = 'commitchange'
  > 51 |     iframe.contentWindow.postMessage(JSON.stringify(params), fullHost)
       |     ^^^^^^^^^^^^^^^^^^^^
    52 |   }
    53 |   
    54 |   commitchange.hideDonation = () => {

ERROR in app/javascript/donate-button/donate-button.v2.ts 125:25-31
TS2531: Object is possibly 'null'.
    123 |     else commitchange.alreadyAppended = true
    124 |     let script = document.getElementById('commitchange-donation-script') || document.getElementById('commitchange-script')
  > 125 |     const nonprofitID = script.getAttribute('data-npo-id')
        |                         ^^^^^^
    126 |     const baseSource = fullHost + "/nonprofits/" + nonprofitID + "/donate?offsite=t"
    127 |     let elems = document.querySelectorAll('.commitchange-donate')
    128 |   

ERROR in app/javascript/hooks/useCurrentUser.ts 84:3-14
TS2322: Type 'CurrentUser | null | undefined' is not assignable to type 'CurrentUser | undefined'.
  Type 'null' is not assignable to type 'CurrentUser | undefined'.
    82 | 	}
    83 | 	const output: SetCurrentUserReturnType = {
  > 84 | 		currentUser,
       | 		^^^^^^^^^^^
    85 | 		revalidate,
    86 | 		signedIn: !!currentUser,
    87 | 		error,

ERROR in app/javascript/hooks/useCurrentUser.ts 85:3-13
TS2322: Type '() => Promise<CurrentUser | null | undefined>' is not assignable to type '() => Promise<CurrentUser>'.
  Type 'Promise<CurrentUser | null | undefined>' is not assignable to type 'Promise<CurrentUser>'.
    Type 'CurrentUser | null | undefined' is not assignable to type 'CurrentUser'.
      Type 'undefined' is not assignable to type 'CurrentUser'.
    83 | 	const output: SetCurrentUserReturnType = {
    84 | 		currentUser,
  > 85 | 		revalidate,
       | 		^^^^^^^^^^
    86 | 		signedIn: !!currentUser,
    87 | 		error,
    88 | 		validatingCurrentUser,

ERROR in app/javascript/hooks/useIntl.ts 19:59-76
TS2352: Conversion of type 'null' to type 'IntlShape' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Type 'null' is not comparable to type 'IntlShape'.
    17 | };
    18 |
  > 19 | export const IntlContext = React.createContext<IntlShape>(null as IntlShape);
       |                                                           ^^^^^^^^^^^^^^^^^
    20 |
    21 | /**
    22 |  * Use just like `useIntl` for getting strings for the current locale.

ERROR in app/javascript/legacy_react/api/api/NonprofitsApi.ts 28:12-42
TS2322: Type 'null' is not assignable to type 'JQueryAjaxSettings | undefined'.
    26 |     protected basePath = `${page_info.apiDomain}/api`;
    27 |     public defaultHeaders: Array<string> = [];
  > 28 |     public defaultExtraJQueryAjaxSettings?: JQueryAjaxSettings = null;
       |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    29 |     public configuration: Configuration = new Configuration();
    30 |
    31 |     constructor(basePath?: string, configuration?: Configuration, defaultExtraJQueryAjaxSettings?: JQueryAjaxSettings) {

ERROR in app/javascript/legacy_react/api/api/NonprofitsApi.ts 45:22-36
TS2339: Property 'hasOwnProperty' does not exist on type 'T2'.
    43 |     private extendObj<T1, T2 extends T1>(objA: T2, objB: T2): T1|T2 {
    44 |         for (let key in objB) {
  > 45 |             if (objB.hasOwnProperty(key)) {
       |                      ^^^^^^^^^^^^^^
    46 |                 objA[key] = objB[key];
    47 |             }
    48 |         }

ERROR in app/javascript/legacy_react/api/api/UsersApi.ts 28:12-42
TS2322: Type 'null' is not assignable to type 'JQueryAjaxSettings | undefined'.
    26 |     protected basePath = `${page_info.apiDomain}`;
    27 |     public defaultHeaders: Array<string> = [];
  > 28 |     public defaultExtraJQueryAjaxSettings?: JQueryAjaxSettings = null;
       |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    29 |     public configuration: Configuration = new Configuration();
    30 |
    31 |     constructor(basePath?: string, configuration?: Configuration, defaultExtraJQueryAjaxSettings?: JQueryAjaxSettings) {

ERROR in app/javascript/legacy_react/api/api/UsersApi.ts 45:22-36
TS2339: Property 'hasOwnProperty' does not exist on type 'T2'.
    43 |     private extendObj<T1, T2 extends T1>(objA: T2, objB: T2): T1|T2 {
    44 |         for (let key in objB) {
  > 45 |             if (objB.hasOwnProperty(key)) {
       |                      ^^^^^^^^^^^^^^
    46 |                 objA[key] = objB[key];
    47 |             }
    48 |         }

ERROR in app/javascript/legacy_react/api/configuration.ts 2:5-11
TS2564: Property 'apiKey' has no initializer and is not definitely assigned in the constructor.
    1 | export class Configuration {
  > 2 |     apiKey: string;
      |     ^^^^^^
    3 |     username: string;
    4 |     password: string;
    5 |     accessToken: string | (() => string);

ERROR in app/javascript/legacy_react/api/configuration.ts 3:5-13
TS2564: Property 'username' has no initializer and is not definitely assigned in the constructor.
    1 | export class Configuration {
    2 |     apiKey: string;
  > 3 |     username: string;
      |     ^^^^^^^^
    4 |     password: string;
    5 |     accessToken: string | (() => string);
    6 | }

ERROR in app/javascript/legacy_react/api/configuration.ts 4:5-13
TS2564: Property 'password' has no initializer and is not definitely assigned in the constructor.
    2 |     apiKey: string;
    3 |     username: string;
  > 4 |     password: string;
      |     ^^^^^^^^
    5 |     accessToken: string | (() => string);
    6 | }

ERROR in app/javascript/legacy_react/api/configuration.ts 5:5-16
TS2564: Property 'accessToken' has no initializer and is not definitely assigned in the constructor.
    3 |     username: string;
    4 |     password: string;
  > 5 |     accessToken: string | (() => string);
      |     ^^^^^^^^^^^
    6 | }

ERROR in app/javascript/legacy_react/api/model/Nonprofit.ts 29:5-12
TS2564: Property 'message' has no initializer and is not definitely assigned in the constructor.
    27 |     }
    28 |
  > 29 |     message: string;
       |     ^^^^^^^
    30 |     stack: string;
    31 |     name: string;
    32 |

ERROR in app/javascript/legacy_react/api/model/Nonprofit.ts 30:5-10
TS2564: Property 'stack' has no initializer and is not definitely assigned in the constructor.
    28 |
    29 |     message: string;
  > 30 |     stack: string;
       |     ^^^^^
    31 |     name: string;
    32 |
    33 |     item: Nonprofit;

ERROR in app/javascript/legacy_react/api/model/Nonprofit.ts 31:5-9
TS2564: Property 'name' has no initializer and is not definitely assigned in the constructor.
    29 |     message: string;
    30 |     stack: string;
  > 31 |     name: string;
       |     ^^^^
    32 |
    33 |     item: Nonprofit;
    34 | }

ERROR in app/javascript/legacy_react/api/model/PostNonprofit.ts 29:5-12
TS2564: Property 'message' has no initializer and is not definitely assigned in the constructor.
    27 |     }
    28 |
  > 29 |     message: string;
       |     ^^^^^^^
    30 |     stack: string;
    31 |     name: string;
    32 |

ERROR in app/javascript/legacy_react/api/model/PostNonprofit.ts 30:5-10
TS2564: Property 'stack' has no initializer and is not definitely assigned in the constructor.
    28 |
    29 |     message: string;
  > 30 |     stack: string;
       |     ^^^^^
    31 |     name: string;
    32 |
    33 |     item: PostNonprofit;

ERROR in app/javascript/legacy_react/api/model/PostNonprofit.ts 31:5-9
TS2564: Property 'name' has no initializer and is not definitely assigned in the constructor.
    29 |     message: string;
    30 |     stack: string;
  > 31 |     name: string;
       |     ^^^^
    32 |
    33 |     item: PostNonprofit;
    34 | }

ERROR in app/javascript/legacy_react/api/model/PostNonprofitNonprofit.ts 65:5-12
TS2564: Property 'message' has no initializer and is not definitely assigned in the constructor.
    63 |     }
    64 |
  > 65 |     message: string;
       |     ^^^^^^^
    66 |     stack: string;
    67 |     name: string;
    68 |

ERROR in app/javascript/legacy_react/api/model/PostNonprofitNonprofit.ts 66:5-10
TS2564: Property 'stack' has no initializer and is not definitely assigned in the constructor.
    64 |
    65 |     message: string;
  > 66 |     stack: string;
       |     ^^^^^
    67 |     name: string;
    68 |
    69 |     item: PostNonprofitNonprofit;

ERROR in app/javascript/legacy_react/api/model/PostNonprofitNonprofit.ts 67:5-9
TS2564: Property 'name' has no initializer and is not definitely assigned in the constructor.
    65 |     message: string;
    66 |     stack: string;
  > 67 |     name: string;
       |     ^^^^
    68 |
    69 |     item: PostNonprofitNonprofit;
    70 | }

ERROR in app/javascript/legacy_react/api/model/PostNonprofitUser.ts 47:5-12
TS2564: Property 'message' has no initializer and is not definitely assigned in the constructor.
    45 |     }
    46 |
  > 47 |     message: string;
       |     ^^^^^^^
    48 |     stack: string;
    49 |     name: string;
    50 |

ERROR in app/javascript/legacy_react/api/model/PostNonprofitUser.ts 48:5-10
TS2564: Property 'stack' has no initializer and is not definitely assigned in the constructor.
    46 |
    47 |     message: string;
  > 48 |     stack: string;
       |     ^^^^^
    49 |     name: string;
    50 |
    51 |     item: PostNonprofitUser;

ERROR in app/javascript/legacy_react/api/model/PostNonprofitUser.ts 49:5-9
TS2564: Property 'name' has no initializer and is not definitely assigned in the constructor.
    47 |     message: string;
    48 |     stack: string;
  > 49 |     name: string;
       |     ^^^^
    50 |
    51 |     item: PostNonprofitUser;
    52 | }

ERROR in app/javascript/legacy_react/api/model/ValidationError.ts 35:5-12
TS2564: Property 'message' has no initializer and is not definitely assigned in the constructor.
    33 |     }
    34 |
  > 35 |     message: string;
       |     ^^^^^^^
    36 |     stack: string;
    37 |     name: string;
    38 |

ERROR in app/javascript/legacy_react/api/model/ValidationError.ts 36:5-10
TS2564: Property 'stack' has no initializer and is not definitely assigned in the constructor.
    34 |
    35 |     message: string;
  > 36 |     stack: string;
       |     ^^^^^
    37 |     name: string;
    38 |
    39 |     item: ValidationError;

ERROR in app/javascript/legacy_react/api/model/ValidationError.ts 37:5-9
TS2564: Property 'name' has no initializer and is not definitely assigned in the constructor.
    35 |     message: string;
    36 |     stack: string;
  > 37 |     name: string;
       |     ^^^^
    38 |
    39 |     item: ValidationError;
    40 | }

ERROR in app/javascript/legacy_react/api/model/ValidationErrors.ts 32:5-12
TS2564: Property 'message' has no initializer and is not definitely assigned in the constructor.
    30 |     }
    31 |
  > 32 |     message: string;
       |     ^^^^^^^
    33 |     stack: string;
    34 |     name: string;
    35 |

ERROR in app/javascript/legacy_react/api/model/ValidationErrors.ts 33:5-10
TS2564: Property 'stack' has no initializer and is not definitely assigned in the constructor.
    31 |
    32 |     message: string;
  > 33 |     stack: string;
       |     ^^^^^
    34 |     name: string;
    35 |
    36 |     item: ValidationErrors;

ERROR in app/javascript/legacy_react/api/model/ValidationErrors.ts 34:5-9
TS2564: Property 'name' has no initializer and is not definitely assigned in the constructor.
    32 |     message: string;
    33 |     stack: string;
  > 34 |     name: string;
       |     ^^^^
    35 |
    36 |     item: ValidationErrors;
    37 | }

ERROR in app/javascript/legacy_react/app/loading_indicator.ts 35:5-54
TS2322: Type 'HTMLElement | null' is not assignable to type 'Element'.
  Type 'null' is not assignable to type 'Element'.
    33 |
    34 |   private getElem(): Element {
  > 35 |     return document.getElementById("pageProgressBar")
       |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    36 |   }
    37 | }
    38 |

ERROR in app/javascript/legacy_react/src/components/common/DefaultCloseButton.tsx 67:3-11
TS2564: Property 'hovering' has no initializer and is not definitely assigned in the constructor.
    65 | export class DefaultCloseButton extends React.Component<DefaultCloseButtonProps, {}> {
    66 |   @observable
  > 67 |   hovering: boolean
       |   ^^^^^^^^
    68 |
    69 |   @observable
    70 |   focusing: boolean

ERROR in app/javascript/legacy_react/src/components/common/DefaultCloseButton.tsx 70:3-11
TS2564: Property 'focusing' has no initializer and is not definitely assigned in the constructor.
    68 |
    69 |   @observable
  > 70 |   focusing: boolean
       |   ^^^^^^^^
    71 |
    72 |   @action.bound
    73 |   mouseEnter() {

ERROR in app/javascript/legacy_react/src/components/common/DefaultCloseButton.tsx 86:7-25
TS2722: Cannot invoke an object which is possibly 'undefined'.
    84 |     if (event.key == 'Enter') {
    85 |       event.preventDefault();
  > 86 |       this.props.onClick();
       |       ^^^^^^^^^^^^^^^^^^
    87 |     }
    88 |   }
    89 |

ERROR in app/javascript/legacy_react/src/components/common/form/ReactInput.tsx 24:3-8
TS2564: Property 'field' has no initializer and is not definitely assigned in the constructor.
    22 |
    23 |   @observable
  > 24 |   field:Field
       |   ^^^^^
    25 |
    26 |
    27 |   @action.bound

ERROR in app/javascript/legacy_react/src/components/common/form/ReactInput.tsx 54:12-26
TS2790: The operand of a 'delete' operator must be optional.
    52 |   winnowProps(): InputTypes {
    53 |     let ourProps = {...this.props}
  > 54 |     delete ourProps.field
       |            ^^^^^^^^^^^^^^
    55 |     delete ourProps.value
    56 |     return ourProps
    57 |

ERROR in app/javascript/legacy_react/src/components/common/form/ReactMaskedInput.tsx 36:3-8
TS2564: Property 'field' has no initializer and is not definitely assigned in the constructor.
    34 |
    35 |   @observable
  > 36 |   field:Field
       |   ^^^^^
    37 |
    38 |
    39 |   @action.bound

ERROR in app/javascript/legacy_react/src/components/common/form/ReactMaskedInput.tsx 66:12-26
TS2790: The operand of a 'delete' operator must be optional.
    64 |   winnowProps(): Omit<InputTypes, 'field'|'value'> {
    65 |     let ourProps = {...this.props}
  > 66 |     delete ourProps.field
       |            ^^^^^^^^^^^^^^
    67 |     delete ourProps.value
    68 |     return ourProps
    69 |

ERROR in app/javascript/legacy_react/src/components/common/form/ReactSelect.tsx 53:12-26
TS2790: The operand of a 'delete' operator must be optional.
    51 |   winnowProps(): InputTypes {
    52 |     let ourProps = {...this.props}
  > 53 |     delete ourProps.field
       |            ^^^^^^^^^^^^^^
    54 |     delete ourProps.value
    55 |     delete ourProps.options
    56 |     return ourProps

ERROR in app/javascript/legacy_react/src/components/common/form/ReactTextarea.tsx 21:3-8
TS2564: Property 'field' has no initializer and is not definitely assigned in the constructor.
    19 |
    20 |   @observable
  > 21 |   field:Field
       |   ^^^^^
    22 |
    23 |
    24 |   @action.bound

ERROR in app/javascript/legacy_react/src/components/common/form/ReactTextarea.tsx 51:12-26
TS2790: The operand of a 'delete' operator must be optional.
    49 |   winnowProps(): InputTypes {
    50 |     let ourProps = {...this.props}
  > 51 |     delete ourProps.field
       |            ^^^^^^^^^^^^^^
    52 |     delete ourProps.value
    53 |     return ourProps
    54 |

ERROR in app/javascript/legacy_react/src/components/common/layout.tsx 17:26-68
TS2345: Argument of type '(i: React.ReactElement<ClassNameable>) => JSX.Element' is not assignable to parameter of type '(value: ReactElement<ClassNameable, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ... 13 more ... | (ReactElement<...>[] & ReactPortal), index: number, array: (ReactElement<...> | ... 13 more ... | (ReactElement<...>[] & ReactPortal))[]) => Element'.
  Types of parameters 'i' and 'value' are incompatible.
    Type 'ReactElement<ClassNameable, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ... 13 more ... | (ReactElement<...>[] & ReactPortal)' is not assignable to type 'ReactElement<ClassNameable, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)>'.
      Type 'ReactElement<ClassNameable, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)>[] & String' is missing the following properties from type 'ReactElement<ClassNameable, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)>': type, props, key
    15 |     return <Row>
    16 |         {
  > 17 |             children.map((i:React.ReactElement<ClassNameable>) => {
       |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    18 |                 let className = ""
    19 |                 if (_.last(children) !== i){
    20 |                     className += " u-paddingRight--10"

ERROR in app/javascript/legacy_react/src/components/common/layout.tsx 38:24-66
TS2345: Argument of type '(i: React.ReactElement<ClassNameable>) => JSX.Element' is not assignable to parameter of type '(value: ReactElement<ClassNameable, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ... 13 more ... | (ReactElement<...>[] & ReactPortal), index: number, array: (ReactElement<...> | ... 13 more ... | (ReactElement<...>[] & ReactPortal))[]) => Element'.
  Types of parameters 'i' and 'value' are incompatible.
    Type 'ReactElement<ClassNameable, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ... 13 more ... | (ReactElement<...>[] & ReactPortal)' is not assignable to type 'ReactElement<ClassNameable, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)>'.
      Type 'ReactElement<ClassNameable, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)>[] & string' is not assignable to type 'ReactElement<ClassNameable, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)>'.
    36 |     return <Row>
    37 |         {
  > 38 |           children.map((i:React.ReactElement<ClassNameable>) => {
       |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    39 |                 let className = ""
    40 |                 if (_.last(children) !== i){
    41 |                     className += " u-paddingRight--10"

ERROR in app/javascript/legacy_react/src/components/common/layout.tsx 56:14-17
TS2322: Type '{ (props: {    children: React.ReactElement<any>[] | React.ReactElement<any>;}): JSX.Element; displayName: string | undefined; }' is not assignable to type 'StatelessComponent<{}>'.
  Types of parameters 'props' and 'props' are incompatible.
    Type '{ children?: ReactNode; }' is not assignable to type '{ children: ReactElement<any, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ReactElement<...>[]; }'.
      Types of property 'children' are incompatible.
        Type 'ReactNode' is not assignable to type 'ReactElement<any, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ReactElement<any, string | ... 1 more ... | (new (props: any) => Component<...>)>[]'.
          Type 'undefined' is not assignable to type 'ReactElement<any, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ReactElement<any, string | ... 1 more ... | (new (props: any) => Component<...>)>[]'.
    54 |
    55 |
  > 56 | export const Row: React.StatelessComponent<{}> = (props:{children:React.ReactElement<any>[]|React.ReactElement<any>}) => {
       |              ^^^
    57 |     return <div className="row">
    58 |         {props.children}
    59 |     </div>

ERROR in app/javascript/legacy_react/src/components/common/Modal.tsx 41:54-72
TS2722: Cannot invoke an object which is possibly 'undefined'.
    39 |               <Column colSpan={1} breakSize={'xs'}>
    40 |                 <div style={{ textAlign: 'right' }}>
  > 41 |                   <DefaultCloseButton onClick={() => this.props.onClose()} />
       |                                                      ^^^^^^^^^^^^^^^^^^
    42 |                 </div>
    43 |               </Column> : false
    44 |             }

ERROR in app/javascript/legacy_react/src/components/common/ProgressableButton.tsx 22:7-15
TS2322: Type 'boolean | undefined' is not assignable to type 'boolean'.
  Type 'undefined' is not assignable to type 'boolean'.
    20 |     let ourData: {title: string, disabled: boolean, prefix: JSX.Element|null}= {
    21 |       title:this.props.buttonText,
  > 22 |       disabled:this.props.disabled,
       |       ^^^^^^^^
    23 |       prefix: null
    24 |     }
    25 |

ERROR in app/javascript/legacy_react/src/components/common/ProgressableButton.tsx 28:7-23
TS2322: Type 'boolean | undefined' is not assignable to type 'boolean'.
  Type 'undefined' is not assignable to type 'boolean'.
    26 |     if (this.props.inProgress){
    27 |       ourData.title = this.props.buttonTextOnProgress || this.props.buttonText
  > 28 |       ourData.disabled = ourData.disabled || this.props.disableOnProgress
       |       ^^^^^^^^^^^^^^^^
    29 |       ourData.prefix = <span><i className='fa fa-spin fa-spinner'></i> </span>
    30 |     }
    31 |

ERROR in app/javascript/legacy_react/src/components/common/Root.tsx 23:3-13
TS2564: Property 'apiManager' has no initializer and is not definitely assigned in the constructor.
    21 | export default class Root extends React.Component<RootProps, {}> {
    22 |
  > 23 |   apiManager: ApiManager
       |   ^^^^^^^^^^
    24 |
    25 |   componentDidMount(){
    26 |     let pageProgress = (window as any).pageProgress

ERROR in app/javascript/legacy_react/src/components/create_offsite_payment_pane/CreateOffsitePaymentPane.tsx 64:40-68
TS2345: Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
  Type 'undefined' is not assignable to type 'string'.
    62 |   @computed
    63 |   get nonprofitTimezonedDates():NonprofitTimezonedDates {
  > 64 |     return new NonprofitTimezonedDates(this.props.nonprofitTimezone)
       |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    65 |   }
    66 |
    67 |   postOffsiteDonation : CreateOffsiteDonation

ERROR in app/javascript/legacy_react/src/components/create_offsite_payment_pane/CreateOffsitePaymentPane.tsx 187:40-68
TS2345: Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
  Type 'undefined' is not assignable to type 'string'.
    185 |
    186 |   @computed get dateFormatter(): NonprofitTimezonedDates {
  > 187 |     return new NonprofitTimezonedDates(this.props.nonprofitTimezone)
        |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    188 |   }
    189 |
    190 |   render() {

ERROR in app/javascript/legacy_react/src/components/edit_payment_pane/EditPaymentPane.tsx 103:40-68
TS2345: Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
  Type 'undefined' is not assignable to type 'string'.
    101 |   @computed
    102 |   get nonprofitTimezonedDates(): NonprofitTimezonedDates {
  > 103 |     return new NonprofitTimezonedDates(this.props.nonprofitTimezone)
        |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    104 |   }
    105 |
    106 |   @computed

ERROR in app/javascript/legacy_react/src/components/edit_payment_pane/EditPaymentPane.tsx 249:40-68
TS2345: Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
  Type 'undefined' is not assignable to type 'string'.
    247 |
    248 |   @computed get dateFormatter(): NonprofitTimezonedDates {
  > 249 |     return new NonprofitTimezonedDates(this.props.nonprofitTimezone)
        |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    250 |   }
    251 |
    252 |   @action.bound

ERROR in app/javascript/legacy_react/src/components/edit_payment_pane/EditPaymentPane.tsx 294:38-49
TS2345: Argument of type 'number | undefined' is not assignable to parameter of type 'number'.
  Type 'undefined' is not assignable to type 'number'.
    292 |             <td>Recurring</td>
    293 |             <td>
  > 294 |               {rd ? readableInterval(rd.interval, rd.time_unit) : false}
        |                                      ^^^^^^^^^^^
    295 |               since
    296 |               {rd ? this.dateFormatter.readable_date(rd.created_at) : false}
    297 |             </td>

ERROR in app/javascript/legacy_react/src/components/edit_payment_pane/EditPaymentPane.tsx 434:32-47
TS2531: Object is possibly 'null'.
    432 |                             ID
    433 |                           </th>
  > 434 |                           <td>{this.dedication.supporter_id}<input {...this.form.$('dedication.supporter_id').bind()}/>
        |                                ^^^^^^^^^^^^^^^
    435 |                           </td>
    436 |                         </tr>
    437 |

ERROR in app/javascript/legacy_react/src/lib/api_manager.ts 75:3-7
TS2564: Property 'name' has no initializer and is not definitely assigned in the constructor.
    73 |
    74 |   message: string;
  > 75 |   name: string;
       |   ^^^^
    76 |   stack: string;
    77 |
    78 | }

ERROR in app/javascript/legacy_react/src/lib/api_manager.ts 76:3-8
TS2564: Property 'stack' has no initializer and is not definitely assigned in the constructor.
    74 |   message: string;
    75 |   name: string;
  > 76 |   stack: string;
       |   ^^^^^
    77 |
    78 | }

ERROR in app/javascript/legacy_react/src/lib/api/create_offsite_donation.ts 8:10-40
TS2322: Type 'null' is not assignable to type 'JQueryAjaxSettings | undefined'.
     6 |   protected basePath = '/';
     7 |   public defaultHeaders: Array<string> = [];
  >  8 |   public defaultExtraJQueryAjaxSettings?: JQueryAjaxSettings = null;
       |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     9 |   public configuration: Configuration = new Configuration();
    10 |
    11 |   constructor(basePath?: string, configuration?: Configuration, defaultExtraJQueryAjaxSettings?: JQueryAjaxSettings) {

ERROR in app/javascript/legacy_react/src/lib/api/put_donation.ts 8:10-40
TS2322: Type 'null' is not assignable to type 'JQueryAjaxSettings | undefined'.
     6 |   protected basePath = '/';
     7 |   public defaultHeaders: Array<string> = [];
  >  8 |   public defaultExtraJQueryAjaxSettings?: JQueryAjaxSettings = null;
       |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     9 |   public configuration: Configuration = new Configuration();
    10 |
    11 |   constructor(basePath?: string, configuration?: Configuration, defaultExtraJQueryAjaxSettings?: JQueryAjaxSettings) {

ERROR in app/javascript/legacy_react/src/lib/createNumberMask.ts 43:44-56
TS2322: Type 'null' is not assignable to type 'number'.
    41 |                                            allowLeadingZeroes = false,
    42 |                                            fixedDecimalScale = false,
  > 43 |                                            integerLimit = null
       |                                            ^^^^^^^^^^^^
    44 |                                          }:NumberMaskProps = {}) {
    45 |   const prefixLength = prefix && prefix.length || 0
    46 |   const suffixLength = suffix && suffix.length || 0

ERROR in app/javascript/legacy_react/src/lib/date.ts 11:13-19
TS2322: Type 'undefined' is not assignable to type 'string'.
     9 | // Return a date in the format MM/DD/YY for a given date string or moment obj
    10 | export function readable_date(date?:string, timezone:string='UTC'):string {
  > 11 |   if(!date) return
       |             ^^^^^^
    12 |   return momentTz(date,timezone).format("MM/DD/YYYY")
    13 | }
    14 |

ERROR in app/javascript/legacy_react/src/lib/date.ts 17:13-19
TS2322: Type 'undefined' is not assignable to type 'string'.
    15 | // Given a created_at string (eg. Charge.last.created_at.to_s), convert it to a readable date-time string
    16 | export function readable_date_time(date?:string, timezone:string='UTC'):string {
  > 17 |   if(!date) return
       |             ^^^^^^
    18 |   return momentTz(date,timezone).format("MM/DD/YYYY H:mma z")
    19 | }
    20 |

ERROR in app/javascript/legacy_react/src/lib/date.ts 61:5-76
TS2322: Type 'string | undefined' is not assignable to type 'string'.
  Type 'undefined' is not assignable to type 'string'.
    59 |
    60 |   readable_date_time_to_iso(date?:string):string {
  > 61 |     return readable_date_time_to_iso(date, this.nonprofitTimezone || 'UTC')
       |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    62 |   }
    63 | }

ERROR in app/javascript/legacy_react/src/lib/format.ts 7:7-20
TS2322: Type 'undefined' is not assignable to type 'number'.
     5 | export function centsToDollars(cents:string|number|undefined, options:{noCents?:boolean}={}):string {
     6 |   if(cents === undefined) return '0'
  >  7 |   let centsAsNumber:number = undefined
       |       ^^^^^^^^^^^^^
     8 |   if (typeof cents === 'string')
     9 |   {
    10 |     centsAsNumber = Number(cents)

ERROR in app/javascript/legacy_react/src/lib/houdini_form.ts 26:11-23
TS2564: Property '$serverError' has no initializer and is not definitely assigned in the constructor.
    24 |
    25 |   @observable
  > 26 |   private $serverError:string
       |           ^^^^^^^^^^^^
    27 |
    28 |   plugins() {
    29 |     return {

ERROR in app/javascript/legacy_react/src/lib/houdini_form.ts 45:5-46:25
TS2322: Type 'string | boolean' is not assignable to type 'boolean'.
  Type 'string' is not assignable to type 'boolean'.
    43 |   @computed
    44 |   public get hasServerError():boolean{
  > 45 |     return (this.$serverError && this.$serverError !== null && this.$serverError !== "") &&
       |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  > 46 |         !this.submitting
       | ^^^^^^^^^^^^^^^^^^^^^^^^^
    47 |   }
    48 |
    49 |   @action

ERROR in app/javascript/legacy_react/src/lib/houdini_form.ts 67:11-28
TS2322: Type 'null' is not assignable to type 'string'.
    65 |         change: IValueDidChange<boolean> }) => {
    66 |         if (obj.change.newValue) {
  > 67 |           this.$serverError = null
       |           ^^^^^^^^^^^^^^^^^
    68 |         }
    69 |       }
    70 |     })

ERROR in app/javascript/legacy_react/src/lib/houdini_form.ts 73:23-35
TS2564: Property '$serverError' has no initializer and is not definitely assigned in the constructor.
    71 |   }
    72 |
  > 73 |   @observable private $serverError:string
       |                       ^^^^^^^^^^^^
    74 |
    75 |   @action
    76 |   invalidateFromServer(message:string) {

ERROR in app/javascript/legacy_react/src/lib/houdini_form.ts 91:5-89
TS2322: Type 'string | boolean' is not assignable to type 'boolean'.
  Type 'string' is not assignable to type 'boolean'.
    89 |   @computed
    90 |   public get hasServerError():boolean{
  > 91 |     return (this.$serverError && this.$serverError !== null && this.$serverError !== "")
       |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    92 |   }
    93 |
    94 |

ERROR in app/javascript/legacy_react/src/lib/houdini_form.ts 172:23-37
TS2532: Object is possibly 'undefined'.
    170 |       let hForm = form as HoudiniForm
    171 |       _.forEach(errorException.item.errors, (error) => {
  > 172 |         let message = error.messages.join(", ")
        |                       ^^^^^^^^^^^^^^
    173 |         _.forEach(error.params, (p) => {
    174 |           if (this.pathToForm[p]) {
    175 |             (hForm.$(this.pathToForm[p]) as HoudiniField).invalidateFromServer(message)

ERROR in app/javascript/legacy_react/src/lib/utils.ts 16:3-37
TS2322: Type 'string | null | undefined' is not assignable to type 'string | undefined'.
  Type 'null' is not assignable to type 'string | undefined'.
    14 | export function castToUndefinedIfBlank(i:null|undefined|string) :
    15 |     string | undefined {
  > 16 |   return isBlank(i) ? undefined : i;
       |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    17 | }
    18 |

ERROR in app/javascript/legacy_react/src/lib/vjf_rules.ts 29:32-36
TS2532: Object is possibly 'undefined'.
    27 |   static shouldBeEqualTo (targetPath: string): Validation {
    28 |     return ({field, form}:ValidationInput) => {
  > 29 |       const fieldsAreEquals = (form.$(targetPath).value === field.value);
       |                                ^^^^
    30 |       return [fieldsAreEquals, `${field.label} and ${form.$(targetPath).label} must be the same`]
    31 |   }
    32 |   }

ERROR in app/javascript/legacy_react/src/lib/vjf_rules.ts 30:54-58
TS2532: Object is possibly 'undefined'.
    28 |     return ({field, form}:ValidationInput) => {
    29 |       const fieldsAreEquals = (form.$(targetPath).value === field.value);
  > 30 |       return [fieldsAreEquals, `${field.label} and ${form.$(targetPath).label} must be the same`]
       |                                                      ^^^^
    31 |   }
    32 |   }
    33 |

ERROR in app/javascript/legacy_react/src/lib/vjf_rules.ts 35:13-22
TS2532: Object is possibly 'undefined'.
    33 |
    34 |   static isUrl({field, validator}:ValidationInput):StringBoolTuple {
  > 35 |     return [validator.isURL(field.value),
       |             ^^^^^^^^^
    36 |     `${field.label} must be a valid URL`]
    37 |   }
    38 |

ERROR in app/javascript/legacy_react/src/lib/vjf_rules.ts 41:10-19
TS2532: Object is possibly 'undefined'.
    39 |   static isFilled({field, validator}:ValidationInput) :StringBoolTuple {
    40 |     return [
  > 41 |         !validator.isEmpty(field.value),
       |          ^^^^^^^^^
    42 |       `${field.label} must be filled out`
    43 |     ]
    44 |   }

ERROR in app/javascript/legacy_react/src/lib/vjf_rules.ts 77:27-36
TS2532: Object is possibly 'undefined'.
    75 |   static optional(validation:Validation) : Validation {
    76 |     return ({field, form, validator}:ValidationInput) => {
  > 77 |       if (!field.value || validator.isEmpty(field.value)){
       |                           ^^^^^^^^^
    78 |         return [true, ""]
    79 |       }
    80 |       else{

ERROR in app/javascript/packs/user-signin-bundle.tsx 7:2-12
TS2322: Type '(props: Record<string, unknown>, railsContext: RailsContext) => RenderFunctionResult' is not assignable to type 'ReactComponentOrRenderFunction'.
  Type '(props: Record<string, unknown>, railsContext: RailsContext) => RenderFunctionResult' is not assignable to type 'FunctionComponent<{}>'.
    Type 'RenderFunctionResult' is not assignable to type 'ReactElement<any, any> | null'.
      Type 'string' is not assignable to type 'ReactElement<any, any> | null'.
    5 | // This is how react_on_rails can see SignInPage in the browser.
    6 | ReactOnRails.register({
  > 7 | 	SignInPage,
      | 	^^^^^^^^^^
    8 | });
    9 |


